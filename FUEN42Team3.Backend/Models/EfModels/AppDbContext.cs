// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace FUEN42Team3.Backend.Models.EfModels;

public partial class AppDbContext : DbContext
{
    public AppDbContext(DbContextOptions<AppDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AggregatedCounter> AggregatedCounters { get; set; }

    public virtual DbSet<Announcement> Announcements { get; set; }

    public virtual DbSet<BannerAd> BannerAds { get; set; }

    public virtual DbSet<Branch> Branches { get; set; }

    public virtual DbSet<BranchOpenTime> BranchOpenTimes { get; set; }

    public virtual DbSet<Brand> Brands { get; set; }

    public virtual DbSet<BrowseHistory> BrowseHistories { get; set; }

    public virtual DbSet<Category> Categories { get; set; }

    public virtual DbSet<ChatConversation> ChatConversations { get; set; }

    public virtual DbSet<ChatMessage> ChatMessages { get; set; }

    public virtual DbSet<Comment> Comments { get; set; }

    public virtual DbSet<CommentGood> CommentGoods { get; set; }

    public virtual DbSet<CommentReport> CommentReports { get; set; }

    public virtual DbSet<CompanyEvent> CompanyEvents { get; set; }

    public virtual DbSet<Counter> Counters { get; set; }

    public virtual DbSet<CustomOrder> CustomOrders { get; set; }

    public virtual DbSet<CustomOrderDesign> CustomOrderDesigns { get; set; }

    public virtual DbSet<DeliveryMethod> DeliveryMethods { get; set; }

    public virtual DbSet<DeliveryRule> DeliveryRules { get; set; }

    public virtual DbSet<EcpayPayment> EcpayPayments { get; set; }

    public virtual DbSet<Event> Events { get; set; }

    public virtual DbSet<EventDetail> EventDetails { get; set; }

    public virtual DbSet<EventFeedback> EventFeedbacks { get; set; }

    public virtual DbSet<EventRegistration> EventRegistrations { get; set; }

    public virtual DbSet<EventType> EventTypes { get; set; }

    public virtual DbSet<Faq> Faqs { get; set; }

    public virtual DbSet<Favorite> Favorites { get; set; }

    public virtual DbSet<Gift> Gifts { get; set; }

    public virtual DbSet<GiftRule> GiftRules { get; set; }

    public virtual DbSet<GiftRuleItem> GiftRuleItems { get; set; }

    public virtual DbSet<Hash> Hashes { get; set; }

    public virtual DbSet<Instructor> Instructors { get; set; }

    public virtual DbSet<Job> Jobs { get; set; }

    public virtual DbSet<JobParameter> JobParameters { get; set; }

    public virtual DbSet<JobQueue> JobQueues { get; set; }

    public virtual DbSet<LinepayPayment> LinepayPayments { get; set; }

    public virtual DbSet<List> Lists { get; set; }

    public virtual DbSet<LogisticsStoreGeocode> LogisticsStoreGeocodes { get; set; }

    public virtual DbSet<Marquee> Marquees { get; set; }

    public virtual DbSet<MassNotification> MassNotifications { get; set; }

    public virtual DbSet<Member> Members { get; set; }

    public virtual DbSet<MemberAddress> MemberAddresses { get; set; }

    public virtual DbSet<MemberCvsAddress> MemberCvsAddresses { get; set; }

    public virtual DbSet<MemberLoginLog> MemberLoginLogs { get; set; }

    public virtual DbSet<MemberPointLog> MemberPointLogs { get; set; }

    public virtual DbSet<MemberProfile> MemberProfiles { get; set; }

    public virtual DbSet<MemberVerification> MemberVerifications { get; set; }

    public virtual DbSet<News> News { get; set; }

    public virtual DbSet<NewsCategory> NewsCategories { get; set; }

    public virtual DbSet<Notification> Notifications { get; set; }

    public virtual DbSet<NotificationType> NotificationTypes { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderDetail> OrderDetails { get; set; }

    public virtual DbSet<OrderGift> OrderGifts { get; set; }

    public virtual DbSet<OrderLogistic> OrderLogistics { get; set; }

    public virtual DbSet<OrderStatus> OrderStatuses { get; set; }

    public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }

    public virtual DbSet<PointGrantRule> PointGrantRules { get; set; }

    public virtual DbSet<PointLot> PointLots { get; set; }

    public virtual DbSet<PointRedemption> PointRedemptions { get; set; }

    public virtual DbSet<PointRedemptionItem> PointRedemptionItems { get; set; }

    public virtual DbSet<PointRule> PointRules { get; set; }

    public virtual DbSet<PopupAd> PopupAds { get; set; }

    public virtual DbSet<Post> Posts { get; set; }

    public virtual DbSet<PostFavorite> PostFavorites { get; set; }

    public virtual DbSet<PostGood> PostGoods { get; set; }

    public virtual DbSet<PostHistory> PostHistories { get; set; }

    public virtual DbSet<PostReport> PostReports { get; set; }

    public virtual DbSet<PostStatus> PostStatuses { get; set; }

    public virtual DbSet<PostType> PostTypes { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<ProductDelivery> ProductDeliveries { get; set; }

    public virtual DbSet<ProductImage> ProductImages { get; set; }

    public virtual DbSet<ProductPayment> ProductPayments { get; set; }

    public virtual DbSet<ProductReview> ProductReviews { get; set; }

    public virtual DbSet<ProductStatus> ProductStatuses { get; set; }

    public virtual DbSet<Punishment> Punishments { get; set; }

    public virtual DbSet<PunishmentType> PunishmentTypes { get; set; }

    public virtual DbSet<Region> Regions { get; set; }

    public virtual DbSet<ReportResult> ReportResults { get; set; }

    public virtual DbSet<ReportStatus> ReportStatuses { get; set; }

    public virtual DbSet<Rule> Rules { get; set; }

    public virtual DbSet<Schema> Schemas { get; set; }

    public virtual DbSet<SearchLog> SearchLogs { get; set; }

    public virtual DbSet<Server> Servers { get; set; }

    public virtual DbSet<Set> Sets { get; set; }

    public virtual DbSet<ShoppingCart> ShoppingCarts { get; set; }

    public virtual DbSet<ShoppingCartItem> ShoppingCartItems { get; set; }

    public virtual DbSet<State> States { get; set; }

    public virtual DbSet<Sticker> Stickers { get; set; }

    public virtual DbSet<Tag> Tags { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserLoginLog> UserLoginLogs { get; set; }

    public virtual DbSet<UserRole> UserRoles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AggregatedCounter>(entity =>
        {
            entity.HasKey(e => e.Key).HasName("PK_HangFire_CounterAggregated");

            entity.HasIndex(e => e.ExpireAt, "IX_HangFire_AggregatedCounter_ExpireAt").HasFilter("([ExpireAt] IS NOT NULL)");
        });

        modelBuilder.Entity<Announcement>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Announce__3214EC07F9BC9578");

            entity.Property(e => e.IsDeleted).HasDefaultValue(true);
            entity.Property(e => e.PostTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.LastEditByNavigation).WithMany(p => p.AnnouncementLastEditByNavigations).HasConstraintName("FK__Announcem__LastE__6E8B6712");

            entity.HasOne(d => d.Status).WithMany(p => p.Announcements)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Announcem__Statu__6F7F8B4B");

            entity.HasOne(d => d.Supervisor).WithMany(p => p.AnnouncementSupervisors)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Announcem__Super__7073AF84");
        });

        modelBuilder.Entity<BannerAd>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__BannerAd__3214EC0779DD3F7A");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.SortOrder).HasDefaultValue(0);
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<Branch>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Branches__3214EC07DD397E1B");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsVisible).HasDefaultValue(true);
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Region).WithMany(p => p.Branches)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Branches__Region__7167D3BD");
        });

        modelBuilder.Entity<BranchOpenTime>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__BranchOp__3214EC07F52CF073");

            entity.HasOne(d => d.Branch).WithMany(p => p.BranchOpenTimes)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BranchOpe__Branc__725BF7F6");
        });

        modelBuilder.Entity<Brand>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Brands__3214EC07A4C2B2EE");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.BrandCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_Brands_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.BrandDeletedByNavigations).HasConstraintName("FK_dbo_Brands_DeletedBy");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.BrandUpdatedByNavigations).HasConstraintName("FK_dbo_Brands_UpdatedBy");
        });

        modelBuilder.Entity<BrowseHistory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__BrowseHi__3214EC073F0A654D");

            entity.Property(e => e.ViewedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.BrowseHistories)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BrowseHistory_Members");

            entity.HasOne(d => d.Product).WithMany(p => p.BrowseHistories)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BrowseHistory_Products");
        });

        modelBuilder.Entity<Category>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Categori__3214EC076DC5C48B");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.CategoryCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_Categories_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.CategoryDeletedByNavigations).HasConstraintName("FK_dbo_Categories_DeletedBy");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.CategoryUpdatedByNavigations).HasConstraintName("FK_dbo_Categories_UpdatedBy");
        });

        modelBuilder.Entity<ChatConversation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ChatConv__3214EC077577DE5E");

            entity.HasIndex(e => e.MemberId, "UX_Chat_Open_OnePerMember")
                .IsUnique()
                .HasFilter("([Status]='Open')");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.LastMessageAt).HasDefaultValueSql("(sysutcdatetime())");

            entity.HasOne(d => d.Member).WithOne(p => p.ChatConversation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ChatConversations_Member");
        });

        modelBuilder.Entity<ChatMessage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ChatMess__3214EC07E6B9942C");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(sysutcdatetime())");

            entity.HasOne(d => d.Conversation).WithMany(p => p.ChatMessages).HasConstraintName("FK_ChatMessages_Conversation");

            entity.HasOne(d => d.Product).WithMany(p => p.ChatMessages).HasConstraintName("FK_ChatMessages_Product");
        });

        modelBuilder.Entity<Comment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Comments__3214EC072C226D0F");

            entity.Property(e => e.CommentTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.Comments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Comments__Member__019E3B86");

            entity.HasOne(d => d.Post).WithMany(p => p.Comments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Comments__PostId__02925FBF");

            entity.HasOne(d => d.ReplyToComment).WithMany(p => p.InverseReplyToComment).HasConstraintName("FK__Comments__ReplyT__038683F8");
        });

        modelBuilder.Entity<CommentGood>(entity =>
        {
            entity.HasKey(e => new { e.MemberId, e.CommentId }).HasName("PK__CommentG__B0CB06E4CE1B161A");

            entity.Property(e => e.CreatedTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Comment).WithMany(p => p.CommentGoods)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CommentGo__Comme__7AF13DF7");

            entity.HasOne(d => d.Member).WithMany(p => p.CommentGoods)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CommentGo__Membe__7BE56230");
        });

        modelBuilder.Entity<CommentReport>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CommentR__3214EC07C69C22F3");

            entity.Property(e => e.ReportTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Comment).WithMany(p => p.CommentReports)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CommentRe__Comme__7CD98669");

            entity.HasOne(d => d.Reporter).WithMany(p => p.CommentReports).HasConstraintName("FK__CommentRe__Repor__7DCDAAA2");

            entity.HasOne(d => d.Result).WithMany(p => p.CommentReports).HasConstraintName("FK__CommentRe__Resul__7EC1CEDB");

            entity.HasOne(d => d.Rule).WithMany(p => p.CommentReports)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CommentRe__RuleI__7FB5F314");

            entity.HasOne(d => d.Status).WithMany(p => p.CommentReports)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CommentRe__Statu__00AA174D");
        });

        modelBuilder.Entity<CompanyEvent>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CompanyE__3214EC0799DCBBF8");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsMajor).HasDefaultValue(false);

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.CompanyEventCreatedByNavigations).HasConstraintName("FK_dbo_CompanyEvents_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.CompanyEventDeletedByNavigations).HasConstraintName("FK_dbo_CompanyEvents_DeletedBy");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.CompanyEventUpdatedByNavigations).HasConstraintName("FK_dbo_CompanyEvents_UpdatedBy");
        });

        modelBuilder.Entity<Counter>(entity =>
        {
            entity.HasKey(e => new { e.Key, e.Id }).HasName("PK_HangFire_Counter");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<CustomOrder>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CustomOr__3214EC0747E548FC");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.CustomOrderDeletedByNavigations).HasConstraintName("FK_dbo_CustomOrders_DeletedBy");

            entity.HasOne(d => d.Member).WithMany(p => p.CustomOrders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CustomOrd__Membe__093F5D4E");

            entity.HasOne(d => d.Order).WithOne(p => p.CustomOrder)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CustomOrd__Order__0A338187");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.CustomOrderUpdatedByNavigations).HasConstraintName("FK_dbo_CustomOrders_UpdatedBy");
        });

        modelBuilder.Entity<CustomOrderDesign>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CustomOr__3214EC07B0FCB7D8");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CustomOrder).WithOne(p => p.CustomOrderDesign)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CustomOrd__Custo__075714DC");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.CustomOrderDesigns).HasConstraintName("FK_dbo_CustomOrderDesigns_UpdatedBy");
        });

        modelBuilder.Entity<DeliveryMethod>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Delivery__3214EC07A60A9837");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.DeliveryMethodCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_DeliveryMethods_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.DeliveryMethodDeletedByNavigations).HasConstraintName("FK_dbo_DeliveryMethods_DeletedBy");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.DeliveryMethodUpdatedByNavigations).HasConstraintName("FK_dbo_DeliveryMethods_UpdatedBy");
        });

        modelBuilder.Entity<DeliveryRule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Delivery__3214EC070805CDBB");

            entity.HasOne(d => d.Delivery).WithOne(p => p.DeliveryRule)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DeliveryR__Deliv__0FEC5ADD");
        });

        modelBuilder.Entity<EcpayPayment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EcpayPay__3214EC07A5288E57");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.EcpayPaymentDeletedByNavigations).HasConstraintName("FK_dbo_EcpayPayments_DeletedBy");

            entity.HasOne(d => d.Order).WithOne(p => p.EcpayPayment)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__EcpayPaym__Order__10E07F16");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.EcpayPaymentUpdatedByNavigations).HasConstraintName("FK_dbo_EcpayPayments_UpdatedBy");
        });

        modelBuilder.Entity<Event>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Events__3214EC07AAACC5D0");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Instructor).WithMany(p => p.Events)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Events__Instruct__1881A0DE");

            entity.HasOne(d => d.Location).WithMany(p => p.Events)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Events__Location__1975C517");

            entity.HasOne(d => d.Status).WithMany(p => p.Events)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Events__StatusId__1A69E950");

            entity.HasOne(d => d.Type).WithMany(p => p.Events)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Events__TypeId__1B5E0D89");
        });

        modelBuilder.Entity<EventDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EventDet__3214EC074DAA3E7E");

            entity.HasOne(d => d.Event).WithMany(p => p.EventDetails).HasConstraintName("FK_tEventDetails_Event");
        });

        modelBuilder.Entity<EventFeedback>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EventFee__3214EC070E2757F7");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Event).WithMany(p => p.EventFeedbacks)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tEventFeedbacks_Event");

            entity.HasOne(d => d.Member).WithMany(p => p.EventFeedbacks)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tEventFeedbacks_Member");
        });

        modelBuilder.Entity<EventRegistration>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EventReg__3214EC07B939F65E");

            entity.Property(e => e.EnrollmentStatus).HasDefaultValue("Active");
            entity.Property(e => e.PaymentStatus).HasDefaultValue("Unpaid");
            entity.Property(e => e.SignupPeople).HasDefaultValue(1);
            entity.Property(e => e.SignupTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Event).WithMany(p => p.EventRegistrations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tEventEnrollments_Event");

            entity.HasOne(d => d.Member).WithMany(p => p.EventRegistrations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tEventEnrollments_Member");
        });

        modelBuilder.Entity<EventType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EventTyp__3214EC070E10964F");

            entity.Property(e => e.IsVisible).HasDefaultValue(true);
        });

        modelBuilder.Entity<Faq>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Faqs__3214EC0738A71F9F");

            entity.Property(e => e.IsActive).HasDefaultValue(true);
        });

        modelBuilder.Entity<Favorite>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Favorite__3214EC07F6DB8F0D");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.Favorites)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Favorites_Members");

            entity.HasOne(d => d.Product).WithMany(p => p.Favorites)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Favorites_Products");
        });

        modelBuilder.Entity<Gift>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Gifts__3214EC07BC4AEA8D");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.GiftCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_Gifts_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.GiftDeletedByNavigations).HasConstraintName("FK_dbo_Gifts_DeletedBy");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.GiftUpdatedByNavigations).HasConstraintName("FK_dbo_Gifts_UpdatedBy");
        });

        modelBuilder.Entity<GiftRule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GiftRule__3214EC07EB449B0F");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.GiftRuleCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_GiftRules_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.GiftRuleDeletedByNavigations).HasConstraintName("FK_dbo_GiftRules_DeletedBy");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.GiftRuleUpdatedByNavigations).HasConstraintName("FK_dbo_GiftRules_UpdatedBy");
        });

        modelBuilder.Entity<GiftRuleItem>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GiftRule__3214EC07F7EB120D");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.GiftRuleItemCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_GiftRuleItems_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.GiftRuleItemDeletedByNavigations).HasConstraintName("FK_dbo_GiftRuleItems_DeletedBy");

            entity.HasOne(d => d.Gift).WithMany(p => p.GiftRuleItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__GiftRuleI__GiftI__1E3A7A34");

            entity.HasOne(d => d.Rule).WithMany(p => p.GiftRuleItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__GiftRuleI__RuleI__1F2E9E6D");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.GiftRuleItemUpdatedByNavigations).HasConstraintName("FK_dbo_GiftRuleItems_UpdatedBy");
        });

        modelBuilder.Entity<Hash>(entity =>
        {
            entity.HasKey(e => new { e.Key, e.Field }).HasName("PK_HangFire_Hash");

            entity.HasIndex(e => e.ExpireAt, "IX_HangFire_Hash_ExpireAt").HasFilter("([ExpireAt] IS NOT NULL)");
        });

        modelBuilder.Entity<Instructor>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Instruct__3214EC0797FE33D5");
        });

        modelBuilder.Entity<Job>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_HangFire_Job");

            entity.HasIndex(e => e.ExpireAt, "IX_HangFire_Job_ExpireAt").HasFilter("([ExpireAt] IS NOT NULL)");

            entity.HasIndex(e => e.StateName, "IX_HangFire_Job_StateName").HasFilter("([StateName] IS NOT NULL)");
        });

        modelBuilder.Entity<JobParameter>(entity =>
        {
            entity.HasKey(e => new { e.JobId, e.Name }).HasName("PK_HangFire_JobParameter");

            entity.HasOne(d => d.Job).WithMany(p => p.JobParameters).HasConstraintName("FK_HangFire_JobParameter_Job");
        });

        modelBuilder.Entity<JobQueue>(entity =>
        {
            entity.HasKey(e => new { e.Queue, e.Id }).HasName("PK_HangFire_JobQueue");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<LinepayPayment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LinepayP__3214EC07004004A5");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.LinepayPaymentDeletedByNavigations).HasConstraintName("FK_dbo_LinepayPayments_DeletedBy");

            entity.HasOne(d => d.Order).WithOne(p => p.LinepayPayment)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__LinepayPa__Order__28B808A7");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.LinepayPaymentUpdatedByNavigations).HasConstraintName("FK_dbo_LinepayPayments_UpdatedBy");
        });

        modelBuilder.Entity<List>(entity =>
        {
            entity.HasKey(e => new { e.Key, e.Id }).HasName("PK_HangFire_List");

            entity.HasIndex(e => e.ExpireAt, "IX_HangFire_List_ExpireAt").HasFilter("([ExpireAt] IS NOT NULL)");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<LogisticsStoreGeocode>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Logistic__3214EC07DF68D7F6");

            entity.HasIndex(e => e.AddressHash, "UX_AddressHash")
                .IsUnique()
                .HasFilter("([AddressHash] IS NOT NULL)");

            entity.Property(e => e.AddressHash).IsFixedLength();
            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.Geocoder).HasDefaultValue("Nominatim");
            entity.Property(e => e.LastGeocodedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.Status).HasDefaultValue("OK");
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<Marquee>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Marquees__3214EC07B5382E28");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.SortOrder).HasDefaultValue(0);
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<MassNotification>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MassNoti__3214EC07ADDA688C");

            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.PublishTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Creator).WithMany(p => p.MassNotifications)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MassNotif__Creat__2B947552");
        });

        modelBuilder.Entity<Member>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Members__3214EC0701515655");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<MemberAddress>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MemberAd__3214EC07B11DEE9C");

            entity.Property(e => e.IsDefault).HasDefaultValue(false);
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.MemberAddresses).HasConstraintName("FK__MemberAdd__Membe__2C88998B");
        });

        modelBuilder.Entity<MemberCvsAddress>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MemberCv__3214EC07E85FACEB");

            entity.HasIndex(e => new { e.MemberId, e.LogisticsSubType }, "UX_MemberCvsAddresses_Default")
                .IsUnique()
                .HasFilter("([IsDefault]=(1))");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.MemberCvsAddresses)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MemberCvsAddresses_Members");
        });

        modelBuilder.Entity<MemberLoginLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MemberLo__3214EC07A2166B95");

            entity.Property(e => e.IsSuccessful).HasDefaultValue(true);
            entity.Property(e => e.LoginAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.MemberLoginLogs)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MemberLog__Membe__2D7CBDC4");
        });

        modelBuilder.Entity<MemberPointLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MemberPo__3214EC07CF7FF969");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.MemberPointLogs)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MemberPoi__Membe__2E70E1FD");

            entity.HasOne(d => d.Order).WithMany(p => p.MemberPointLogs).HasConstraintName("FK_MemberPointLogs_Orders");
        });

        modelBuilder.Entity<MemberProfile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MemberPr__3214EC071E8F1D4F");

            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.MemberProfiles)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MemberPro__Membe__30592A6F");
        });

        modelBuilder.Entity<MemberVerification>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MemberVe__3214EC07056731B2");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.MemberVerifications)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MemberVer__Membe__314D4EA8");
        });

        modelBuilder.Entity<News>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__News__954EBDF3A482B9F1");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Category).WithMany(p => p.News)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__News__CategoryId__324172E1");

            entity.HasOne(d => d.Status).WithMany(p => p.News)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__News__StatusId__3335971A");

            entity.HasOne(d => d.User).WithMany(p => p.News)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__News__UserId__3429BB53");
        });

        modelBuilder.Entity<NewsCategory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__NewsCate__3214EC0721F3851D");

            entity.Property(e => e.IsVisible).HasDefaultValue(true);
        });

        modelBuilder.Entity<Notification>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Notifica__3214EC07097DD2A7");

            entity.Property(e => e.Time).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.Notifications)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Notificat__Membe__351DDF8C");

            entity.HasOne(d => d.Type).WithMany(p => p.Notifications)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Notificat__TypeI__361203C5");
        });

        modelBuilder.Entity<NotificationType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Notifica__3214EC0776194CBA");
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Orders__3214EC07D075AAC7");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.OrderDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.OrderType).HasDefaultValue("Standard");
            entity.Property(e => e.StatusId).HasDefaultValue(1);

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.OrderDeletedByNavigations).HasConstraintName("FK_dbo_Orders_DeletedBy");

            entity.HasOne(d => d.DeliveryMethod).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Orders_DeliveryMethods");

            entity.HasOne(d => d.Member).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Orders_Members");

            entity.HasOne(d => d.PaymentMethod).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Orders_PaymentMethods");

            entity.HasOne(d => d.Status).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Orders_OrderStatuses");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.OrderUpdatedByNavigations).HasConstraintName("FK_dbo_Orders_UpdatedBy");
        });

        modelBuilder.Entity<OrderDetail>(entity =>
        {
            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderDetails)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrderDetails_Orders");

            entity.HasOne(d => d.Product).WithMany(p => p.OrderDetails)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrderDetails_Products");
        });

        modelBuilder.Entity<OrderGift>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OrderGif__3214EC07C93732D5");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.OrderGiftCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_OrderGifts_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.OrderGiftDeletedByNavigations).HasConstraintName("FK_dbo_OrderGifts_DeletedBy");

            entity.HasOne(d => d.Gift).WithMany(p => p.OrderGifts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderGift__GiftI__38EE7070");

            entity.HasOne(d => d.GiftRule).WithMany(p => p.OrderGifts).HasConstraintName("FK__OrderGift__GiftR__39E294A9");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderGifts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderGift__Order__3AD6B8E2");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.OrderGiftUpdatedByNavigations).HasConstraintName("FK_dbo_OrderGifts_UpdatedBy");
        });

        modelBuilder.Entity<OrderLogistic>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OrderLog__3214EC07C44836AC");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Order).WithOne(p => p.OrderLogistic).HasConstraintName("FK_OrderLogistics_Orders");
        });

        modelBuilder.Entity<OrderStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OrderSta__3214EC07ED7BEA10");
        });

        modelBuilder.Entity<PaymentMethod>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PaymentM__3214EC073CA26D0C");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.PaymentMethodCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_PaymentMethods_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.PaymentMethodDeletedByNavigations).HasConstraintName("FK_dbo_PaymentMethods_DeletedBy");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.PaymentMethodUpdatedByNavigations).HasConstraintName("FK_dbo_PaymentMethods_UpdatedBy");
        });

        modelBuilder.Entity<PointGrantRule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PointGra__3214EC07CD9C4850");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.IsEnabled).HasDefaultValue(true);
            entity.Property(e => e.Target).HasDefaultValue("AllMembers");
        });

        modelBuilder.Entity<PointLot>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PointLot__3214EC079A4D4B3A");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(sysutcdatetime())");

            entity.HasOne(d => d.Member).WithMany(p => p.PointLots)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PointLots_Member");
        });

        modelBuilder.Entity<PointRedemption>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PointRed__3214EC077D2AE795");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(sysutcdatetime())");

            entity.HasOne(d => d.Member).WithMany(p => p.PointRedemptions)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PointRedemptions_Member");
        });

        modelBuilder.Entity<PointRedemptionItem>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PointRed__3214EC0734343D87");

            entity.HasOne(d => d.Lot).WithMany(p => p.PointRedemptionItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PointRedemptionItems_Lot");

            entity.HasOne(d => d.Redemption).WithMany(p => p.PointRedemptionItems).HasConstraintName("FK_PointRedemptionItems_Redemption");
        });

        modelBuilder.Entity<PointRule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PointRul__3214EC0758CF142C");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.ExpiryMode).HasDefaultValue("Days");
            entity.Property(e => e.PointType).HasDefaultValue("Fixed");
            entity.Property(e => e.Status).HasDefaultValue("Draft");
            entity.Property(e => e.Target).HasDefaultValue("AllMembers");
            entity.Property(e => e.TriggerType).HasDefaultValue("Schedule");
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(sysutcdatetime())");
        });

        modelBuilder.Entity<PopupAd>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PopupAds__3214EC079A614A2D");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.SortOrder).HasDefaultValue(0);
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<Post>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Posts__3214EC07906991E9");

            entity.HasOne(d => d.Member).WithMany(p => p.Posts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Posts__MemberId__50C5FA01");

            entity.HasOne(d => d.Status).WithMany(p => p.Posts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Posts__StatusId__51BA1E3A");

            entity.HasOne(d => d.Type).WithMany(p => p.Posts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Posts__TypeId__52AE4273");

            entity.HasMany(d => d.Tags).WithMany(p => p.Posts)
                .UsingEntity<Dictionary<string, object>>(
                    "PostTag",
                    r => r.HasOne<Tag>().WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PostTags__TagId__54968AE5"),
                    l => l.HasOne<Post>().WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PostTags__PostId__53A266AC"),
                    j =>
                    {
                        j.HasKey("PostId", "TagId").HasName("PK__PostTags__7C45AF822E736F1F");
                        j.ToTable("PostTags");
                    });
        });

        modelBuilder.Entity<PostFavorite>(entity =>
        {
            entity.HasKey(e => new { e.MemberId, e.PostId }).HasName("PK__PostFavo__96516D1923B3EBDA");

            entity.Property(e => e.CreatedTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.PostFavorites)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PostFavor__Membe__473C8FC7");

            entity.HasOne(d => d.Post).WithMany(p => p.PostFavorites)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PostFavor__PostI__4830B400");
        });

        modelBuilder.Entity<PostGood>(entity =>
        {
            entity.HasKey(e => new { e.MemberId, e.PostId }).HasName("PK__PostGood__96516D19F777E383");

            entity.Property(e => e.CreatedTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithMany(p => p.PostGoods)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PostGoods__Membe__4924D839");

            entity.HasOne(d => d.Post).WithMany(p => p.PostGoods)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PostGoods__PostI__4A18FC72");
        });

        modelBuilder.Entity<PostHistory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PostHist__3214EC079D5FD62B");

            entity.HasOne(d => d.Post).WithMany(p => p.PostHistories).HasConstraintName("FK__PostHisto__PostI__4B0D20AB");
        });

        modelBuilder.Entity<PostReport>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PostRepo__3214EC07873C59F8");

            entity.Property(e => e.ReportTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Post).WithMany(p => p.PostReports)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PostRepor__PostI__4C0144E4");

            entity.HasOne(d => d.Reporter).WithMany(p => p.PostReports).HasConstraintName("FK__PostRepor__Repor__4CF5691D");

            entity.HasOne(d => d.Result).WithMany(p => p.PostReports).HasConstraintName("FK__PostRepor__Resul__4DE98D56");

            entity.HasOne(d => d.Rule).WithMany(p => p.PostReports)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PostRepor__RuleI__4EDDB18F");

            entity.HasOne(d => d.Status).WithMany(p => p.PostReports)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PostRepor__Statu__4FD1D5C8");
        });

        modelBuilder.Entity<PostStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PostStat__3214EC0713116957");
        });

        modelBuilder.Entity<PostType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PostType__3214EC071C1524BA");
        });

        modelBuilder.Entity<Product>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Products__3214EC0735A22184");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.MinimumOrderQuantity).HasDefaultValue(1);

            entity.HasOne(d => d.Brand).WithMany(p => p.Products)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Products_Brands");

            entity.HasOne(d => d.Category).WithMany(p => p.Products)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Products_Categories");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.ProductCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_Products_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.ProductDeletedByNavigations).HasConstraintName("FK_dbo_Products_DeletedBy");

            entity.HasOne(d => d.Status).WithMany(p => p.Products)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Products_Status");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.ProductUpdatedByNavigations).HasConstraintName("FK_dbo_Products_UpdatedBy");
        });

        modelBuilder.Entity<ProductDelivery>(entity =>
        {
            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.ProductDeliveryCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_ProductDelivery_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.ProductDeliveryDeletedByNavigations).HasConstraintName("FK_dbo_ProductDelivery_DeletedBy");

            entity.HasOne(d => d.Delivery).WithMany(p => p.ProductDeliveries)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductDe__Deliv__558AAF1E");

            entity.HasOne(d => d.Product).WithMany(p => p.ProductDeliveries)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductDe__Produ__567ED357");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.ProductDeliveryUpdatedByNavigations).HasConstraintName("FK_dbo_ProductDelivery_UpdatedBy");
        });

        modelBuilder.Entity<ProductImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ProductI__3214EC07EFFF3F2F");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.ProductImageCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_ProductImages_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.ProductImageDeletedByNavigations).HasConstraintName("FK_dbo_ProductImages_DeletedBy");

            entity.HasOne(d => d.Product).WithMany(p => p.ProductImages)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProductImages_Products");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.ProductImageUpdatedByNavigations).HasConstraintName("FK_dbo_ProductImages_UpdatedBy");
        });

        modelBuilder.Entity<ProductPayment>(entity =>
        {
            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.ProductPaymentCreatedByNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo_ProductPayment_CreatedBy");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.ProductPaymentDeletedByNavigations).HasConstraintName("FK_dbo_ProductPayment_DeletedBy");

            entity.HasOne(d => d.Payment).WithMany(p => p.ProductPayments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductPa__Payme__5E1FF51F");

            entity.HasOne(d => d.Product).WithMany(p => p.ProductPayments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductPa__Produ__5F141958");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.ProductPaymentUpdatedByNavigations).HasConstraintName("FK_dbo_ProductPayment_UpdatedBy");
        });

        modelBuilder.Entity<ProductReview>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ProductR__3214EC0722EAF32F");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.DeletedByNavigation).WithMany(p => p.ProductReviewDeletedByNavigations).HasConstraintName("FK_dbo_ProductReviews_DeletedBy");

            entity.HasOne(d => d.Member).WithMany(p => p.ProductReviews)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProductReviews_Members");

            entity.HasOne(d => d.Product).WithMany(p => p.ProductReviews)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProductReviews_Products");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.ProductReviewUpdatedByNavigations).HasConstraintName("FK_dbo_ProductReviews_UpdatedBy");
        });

        modelBuilder.Entity<ProductStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ProductS__3214EC075E27EF3E");
        });

        modelBuilder.Entity<Punishment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Punishme__3214EC07E942AE8F");

            entity.Property(e => e.IsActive).HasDefaultValue(true);

            entity.HasOne(d => d.Member).WithMany(p => p.Punishments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Punishmen__Membe__6C6E1476");

            entity.HasOne(d => d.Type).WithMany(p => p.Punishments).HasConstraintName("FK__Punishmen__TypeI__6D6238AF");
        });

        modelBuilder.Entity<PunishmentType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Punishme__3214EC0756C3CFF7");
        });

        modelBuilder.Entity<Region>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Regions__3214EC0734EE26ED");
        });

        modelBuilder.Entity<ReportResult>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ReportRe__3214EC07400DC3F9");
        });

        modelBuilder.Entity<ReportStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ReportSt__3214EC07B1B6968D");
        });

        modelBuilder.Entity<Rule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Rules__3214EC0731D5FB57");
        });

        modelBuilder.Entity<Schema>(entity =>
        {
            entity.HasKey(e => e.Version).HasName("PK_HangFire_Schema");

            entity.Property(e => e.Version).ValueGeneratedNever();
        });

        modelBuilder.Entity<SearchLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SearchLo__3214EC07EF8B4D30");

            entity.HasOne(d => d.Member).WithMany(p => p.SearchLogs).HasConstraintName("FK__SearchLog__Membe__6E565CE8");
        });

        modelBuilder.Entity<Server>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_HangFire_Server");
        });

        modelBuilder.Entity<Set>(entity =>
        {
            entity.HasKey(e => new { e.Key, e.Value }).HasName("PK_HangFire_Set");

            entity.HasIndex(e => e.ExpireAt, "IX_HangFire_Set_ExpireAt").HasFilter("([ExpireAt] IS NOT NULL)");
        });

        modelBuilder.Entity<ShoppingCart>(entity =>
        {
            entity.HasKey(e => e.MemberId).HasName("PK__Shopping__0CF04B18DB200A9F");

            entity.Property(e => e.MemberId).ValueGeneratedNever();
            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Member).WithOne(p => p.ShoppingCart)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ShoppingC__Membe__7132C993");
        });

        modelBuilder.Entity<ShoppingCartItem>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Shopping__3214EC07DE502981");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Cart).WithMany(p => p.ShoppingCartItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ShoppingCartItems_ShoppingCarts");

            entity.HasOne(d => d.Product).WithMany(p => p.ShoppingCartItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ShoppingCartItems_Products");
        });

        modelBuilder.Entity<State>(entity =>
        {
            entity.HasKey(e => new { e.JobId, e.Id }).HasName("PK_HangFire_State");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();

            entity.HasOne(d => d.Job).WithMany(p => p.States).HasConstraintName("FK_HangFire_State_Job");
        });

        modelBuilder.Entity<Sticker>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Stickers__3214EC079CA62C74");
        });

        modelBuilder.Entity<Tag>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Tags__3214EC07E67BB55B");

            entity.Property(e => e.IsActive).HasDefaultValue(true);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Users__3214EC07EB7B4928");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);

            entity.HasOne(d => d.Role).WithMany(p => p.Users)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Users__RoleId__731B1205");
        });

        modelBuilder.Entity<UserLoginLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__UserLogi__3214EC07CBC66CA7");

            entity.Property(e => e.IsSuccessful).HasDefaultValue(true);
            entity.Property(e => e.LoginAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.User).WithMany(p => p.UserLoginLogs)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UserLogin__UserI__7226EDCC");
        });

        modelBuilder.Entity<UserRole>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__UserRole__3214EC074C2B48CF");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}