// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace FUEN42Team3.Backend.Models.EfModels;

[Index("Sku", Name = "UQ__Products__CA1ECF0D3C6D631D", IsUnique = true)]
public partial class Product
{
    [Key]
    public int Id { get; set; }

    public int CategoryId { get; set; }

    public int BrandId { get; set; }

    public int StatusId { get; set; }

    [Required]
    [StringLength(100)]
    public string ProductName { get; set; }

    public int Quantity { get; set; }

    [Required]
    [Column("SKU")]
    [StringLength(50)]
    public string Sku { get; set; }

    [Column(TypeName = "decimal(10, 0)")]
    public decimal BasePrice { get; set; }

    [Column(TypeName = "decimal(10, 0)")]
    public decimal? SpecialPrice { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? SpecialPriceStartDate { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? SpecialPriceEndDate { get; set; }

    public int MinimumOrderQuantity { get; set; }

    public int? MaximumOrderQuantity { get; set; }

    [Column(TypeName = "decimal(10, 0)")]
    public decimal? Weight { get; set; }

    [Column(TypeName = "decimal(10, 0)")]
    public decimal? Length { get; set; }

    [Column(TypeName = "decimal(10, 0)")]
    public decimal? Width { get; set; }

    [Column(TypeName = "decimal(10, 0)")]
    public decimal? Height { get; set; }

    public string Description { get; set; }

    public bool IsPreorder { get; set; }

    public DateOnly? EstimatedReleaseDate { get; set; }

    public bool IsActive { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime CreatedAt { get; set; }

    public int CreatedBy { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? UpdatedAt { get; set; }

    public int? UpdatedBy { get; set; }

    public bool IsDeleted { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? DeletedAt { get; set; }

    public int? DeletedBy { get; set; }

    public bool IsPublished { get; set; }

    [ForeignKey("BrandId")]
    [InverseProperty("Products")]
    public virtual Brand Brand { get; set; }

    [InverseProperty("Product")]
    public virtual ICollection<BrowseHistory> BrowseHistories { get; set; } = new List<BrowseHistory>();

    [ForeignKey("CategoryId")]
    [InverseProperty("Products")]
    public virtual Category Category { get; set; }

    [InverseProperty("Product")]
    public virtual ICollection<ChatMessage> ChatMessages { get; set; } = new List<ChatMessage>();

    [ForeignKey("CreatedBy")]
    [InverseProperty("ProductCreatedByNavigations")]
    public virtual User CreatedByNavigation { get; set; }

    [ForeignKey("DeletedBy")]
    [InverseProperty("ProductDeletedByNavigations")]
    public virtual User DeletedByNavigation { get; set; }

    [InverseProperty("Product")]
    public virtual ICollection<Favorite> Favorites { get; set; } = new List<Favorite>();

    [InverseProperty("Product")]
    public virtual ICollection<OrderDetail> OrderDetails { get; set; } = new List<OrderDetail>();

    [InverseProperty("Product")]
    public virtual ICollection<ProductDelivery> ProductDeliveries { get; set; } = new List<ProductDelivery>();

    [InverseProperty("Product")]
    public virtual ICollection<ProductImage> ProductImages { get; set; } = new List<ProductImage>();

    [InverseProperty("Product")]
    public virtual ICollection<ProductPayment> ProductPayments { get; set; } = new List<ProductPayment>();

    [InverseProperty("Product")]
    public virtual ICollection<ProductReview> ProductReviews { get; set; } = new List<ProductReview>();

    [InverseProperty("Product")]
    public virtual ICollection<ShoppingCartItem> ShoppingCartItems { get; set; } = new List<ShoppingCartItem>();

    [ForeignKey("StatusId")]
    [InverseProperty("Products")]
    public virtual ProductStatus Status { get; set; }

    [ForeignKey("UpdatedBy")]
    [InverseProperty("ProductUpdatedByNavigations")]
    public virtual User UpdatedByNavigation { get; set; }
}